"use strict";

var _ = require('lodash');

/**
 * Creates a new Character
 * @class Character
 * @constructs
 */
module.exports = function (opt){
        var defaults = {
            /** Unique ID for the chracter */
            id:0,
            /** Team this character is on (1 or 2) */
            team:1,
            /** Int for a user to compare how powerful one character is over another generated by the stats somehow */
            power:1, 
            /** Is the amount a damage a hero can withstand that gets through Armor or Resistance. If this reaches 0, the character is defeated. */
            health:100, 
            /** Determines the rate in which a character gets to take a turn. This is very important during the first couple actions to eliminate high threats and can be indirectly influenced by turn meter gain and reduction abilities. */
            speed:50, 

            /** Physical Damage for basic attack */
            baseDamage:10, 
            /** Special Damage for special attacks */
            specialDamage:10, 
            /** Area Damage for area of effect attacks  */
            areaDamage:5,

            /**percentage to crit physical actions  */
            physicalCritChance:.05,
            /**percentage to crit special actions  */
            specialCritChance:.05, 

            /**damage =  (Opponents Armor – Attacker’s Armor Penetration) */
            armor:5, 
            /**damage =  (Opponents Armor – Attacker’s Armor Penetration) */
            armorPenitration:1,
            
            /** specialdamage =  (Opponents resistance – Attacker’s resistancePenetration) */
            resistance:2, 
            /** specialdamage =  (Opponents resistance – Attacker’s resistancePenetration) */
            resistancePenetration:1,

            /**Increases the chance to apply detrimental effects to opponents */
            potency:1, 
            /** Increases the chance to ward off detrimental effects. */
            tenacity:1, 
             /**Returns a HP % of damage dealt to enemies (multiplied if Area Damage) */
            healthSteal:0.0, 

            /** Strength */
            STR:10, //Strength
            /** Agility  */
            AGI:10, 
            /** Intellegence  */
            INT:10, 

            /** Used to calculate damage dealt by all Physical abilities, is based on a characters primary stat, and is mitigated by armor. */ 
            PhysicalDamage:10,

            /** Used to calculate damage dealt by some Special Abilities and is mitigated by resistance. */
            SpecialDamage:10,  
            
            /** Determines the chance to evade Physical abilities. */
            DodgeRating:.05,  
            /** Determines the chance to evade Special abilities. */
            DeflectionRating:.05, 
            /** Increases the amount of damage dealt by a Critical Hit. */
            CriticalDamage:1.5, 

            /** List of Affects on the Character */
            buffs:[],

            /** When turnMeter reaches 1000 the player will act, ties above 1000 are choosen randomly */
            turnMeter:0
        }
        this.stats = _.defaultsDeep(opt,defaults);
        this.state = _.clone(this.stats);

        /**
         * given the Character's current state how much turn meter will I gain in one tick?
         */
        this.turnMeterGain = function(){
            return this.stats.speed;
        },
        this.applyDamage = function(dmg){
            this.state.health -= dmg;
        }
}




